; std.replicode

;mapping objects -> r-code
!class (view[] sync:bl ijt:us sln:nb res:nb grp:grp org:)
!class (grp_view[] sync:bl ijt:us sln:nb res:nb grp:grp org: vis:nb cov:nb)
!class (pgm_view[] sync:bl ijt:us sln:nb res:nb grp:grp org: act:nb)
!class (_obj :~ psln_thr:nb)
!class (ptn skel:xpr guards:[::xpr])
!class (|ptn skel:xpr guards:[::xpr])
!class (_in_sec[] inputs:[] timings:[::xpr] guards:[::xpr] :~)
!class (pgm (_obj {tpl:[::ptn] input:(_in_sec nil) prods: tsc:us nfr:nb}))
!class (|pgm (_obj {tpl:[::ptn] input:(_in_sec nil) prods: tsc:us nfr:nb}))
!class (grp (_obj {upr:nb sln_thr:nb act_thr:nb vis_thr:nb c_sln:nb c_sln_thr:nb c_act:nb c_act_thr:nb dcy_per:nb dcy_tgt:nb dcy_prd:nb dcy_auto:nb sln_chg_thr:nb sln_chg_prd:nb act_chg_thr:nb act_chg_prd:nb avg_sln:nb high_sln:nb low_sln:nb avg_act:nb high_act:nb low_act:nb high_sln_thr:nb low_sln_thr:nb sln_ntf_prd:nb high_act_thr:nb low_act_thr:nb act_ntf_prd:nb ntf_new:nb low_res_thr:nb ntf_grps:[::grp]}))
!class (cmd function:fid device:did args:[])
!class (ent (_obj nil))
!class (dev (_obj nil))
!class (nod (_obj id:nid))
!class (ipgm (_obj {code: args:[]}))

;mapping markers -> r-code
!class (mk.rdx (_obj {code: inputs:[] prods:[]}))
!class (mk.|rdx (_obj {code: prods:[]}))
!class (mk.low_sln (_obj obj:))
!class (mk.high_sln (_obj obj:))
!class (mk.low_act (_obj obj:))
!class (mk.high_act (_obj obj:))
!class (mk.low_res (_obj obj:))
!class (mk.sln_chg (_obj {obj: chg:nb}))
!class (mk.act_chg (_obj {obj: chg:nb}))
!class (mk.new (_obj obj:))

;mapping operator opcodes -> r-atoms
!op (_now):us
!op (rnd :nb):nb
!op (equ : :):
!op (neq : :):
!op (gtr : :):
!op (lsr : :):
!op (gte : :):
!op (lse : :):
!op (add : :):
!op (sub : :):
!op (mul :nb :nb):nb
!op (div :nb :nb):nb
!op (dis :nb :nb):nb
!op (ln :nb):nb
!op (exp :nb):nb
!op (log :nb):nb
!op (e10 :nb):nb
!op (syn :):
!op (ins : :[]):
!op (red :[] :[] :[]):[]
!op (fvw : :):

;operator aliases
!def now (_now)
!def = equ
!def <> neq
!def > gtr
!def < lsr
!def <= gte
!def >= lse
!def + add
!def - sub
!def * mul
!def \ syn

;mapping devices -> r-atoms
!def exe 0xA1000000; the executive.

;mapping device functions -> r-atoms
!dfn (_inj : :)
!dfn (_eje : : :nid)
!dfn (_mod : :nb)
!dfn (_set : :nb)
!dfn (_new_class :)
!dfn (_del_class :)
!dfn (_ldc :st)
!dfn (_swp :nb)
!dfn (_new_dev :st :nb)
!dfn (_del_dev :did)
!dfn (_suspend)
!dfn (_stop)

;device functions aliases
!def (inj args) (cmd _inj exe args)
!def (eje args) (cmd _eje exe args)
!def (mod args) (cmd _mod exe args)
!def (set args) (cmd _set exe args)
!def (new_class args) (cmd _new_class exe args)
!def (del_class args) (cmd _del_class exe args)
!def (ldc args) (cmd _ldc exe args)
!def (swp args) (cmd _swp exe args)
!def (new_dev args) (cmd _new_dev exe args)
!def (del_dev args) (cmd _del_dev exe args)
!def (stop args) (cmd _stop exe args)
!def (suspend args) (cmd _suspend exe args)

;various constants
!counter __constant 0
!def OFF __constant
!def ON __constant

;parameters for tuning the behavior of reactive objects
;member nfr
!def SILENT 0; no notification upon production
!def NOTIFY 1; notification upon productions

;parameters for tuning the behavior of groups
!def DCY_SLN 0
!def DCY_SLN_THR 1
!def COV_ON 1
!def COV_OFF 0

!def SYNC_FRONT true
!def SYNC_STATE false
